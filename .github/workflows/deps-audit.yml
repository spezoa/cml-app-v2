name: deps-audit
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Detecta si existe package-lock.json
      - name: Detect lockfile
        id: lock
        run: |
          if [ -f package-lock.json ]; then
            echo "haslock=true" >> $GITHUB_OUTPUT
          else
            echo "haslock=false" >> $GITHUB_OUTPUT
          fi

      # Con lockfile: usa cache de npm
      - name: Setup Node (cached)
        if: steps.lock.outputs.haslock == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      # Sin lockfile: sin cache
      - name: Setup Node (no cache)
        if: steps.lock.outputs.haslock == 'false'
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      # Instala deps; usa npm ci si hay lockfile, si no npm install
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-audit --no-fund
          else
            npm install --no-audit --no-fund
          fi

      # Depcheck: detecta unused/missing deps (no falla el job si algo sale)
      - name: Depcheck (unused/missing)
        run: npx depcheck --json > depcheck.json || true

      # Árbol completo de dependencias
      - name: Full tree (npm ls)
        run: npm ls --all --json > npm-ls.json || true

      # Sube artefactos incluso si hubo warnings en pasos anteriores
      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: deps-report
          path: |
            package.json
            package-lock.json
            depcheck.json
            npm-ls.json
